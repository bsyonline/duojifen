<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.PaymentLogDao">

    <resultMap type="com.platform.entity.PaymentLogEntity" id="paymentLogMap">
        <result property="id" column="id"/>
        <result property="paysn" column="paySn"/>
        <result property="steps" column="steps"/>
        <result property="serverip" column="serverip"/>
        <result property="clientip" column="clientip"/>
        <result property="remark" column="remark"/>
        <result property="reqparams" column="reqparams"/>
        <result property="webApp" column="web_app"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.PaymentLogEntity">
		select
			`id`,
			`paySn`,
			`steps`,
			`serverip`,
			`clientip`,
			`remark`,
			`reqparams`,
			`web_app`,
			`create_time`,
			`update_time`
		from t_payment_log
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.PaymentLogEntity">
		select
    		`id`,
    		`paySn`,
    		`steps`,
    		`serverip`,
    		`clientip`,
    		`remark`,
    		`reqparams`,
    		`web_app`,
    		`create_time`,
    		`update_time`
		from t_payment_log
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from t_payment_log
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.PaymentLogEntity" useGeneratedKeys="true" keyProperty="id">
		insert into t_payment_log(
			`paySn`,
			`steps`,
			`serverip`,
			`clientip`,
			`remark`,
			`reqparams`,
			`web_app`,
			`create_time`,
			`update_time`)
		values(
			#{paysn},
			#{steps},
			#{serverip},
			#{clientip},
			#{remark},
			#{reqparams},
			#{webApp},
			#{createTime},
			#{updateTime})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.PaymentLogEntity">
		update t_payment_log 
		<set>
			<if test="paysn != null">`paySn` = #{paysn}, </if>
			<if test="steps != null">`steps` = #{steps}, </if>
			<if test="serverip != null">`serverip` = #{serverip}, </if>
			<if test="clientip != null">`clientip` = #{clientip}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="reqparams != null">`reqparams` = #{reqparams}, </if>
			<if test="webApp != null">`web_app` = #{webApp}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from t_payment_log where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_payment_log where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>