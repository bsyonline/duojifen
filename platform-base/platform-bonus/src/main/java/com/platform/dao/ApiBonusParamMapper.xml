<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.ApiBonusParamMapper">

    <resultMap type="com.platform.entity.BonusParamVo" id="bonusParamMap">
        <result property="id" column="id"/>
        <result property="paramKey" column="param_key"/>
        <result property="paramValue" column="param_value"/>
        <result property="status" column="status"/>
        <result property="remark" column="remark"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.BonusParamVo">
		select
			`id`,
			`param_key`,
			`param_value`,
			`status`,
			`remark`
		from t_bonus_param
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.BonusParamVo">
		select
    		`id`,
    		`param_key`,
    		`param_value`,
    		`status`,
    		`remark`
		from t_bonus_param
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from t_bonus_param
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.BonusParamVo" useGeneratedKeys="true" keyProperty="id">
		insert into t_bonus_param(
			`param_key`,
			`param_value`,
			`status`,
			`remark`)
		values(
			#{paramKey},
			#{paramValue},
			#{status},
			#{remark})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.BonusParamVo">
		update t_bonus_param 
		<set>
			<if test="paramKey != null">`param_key` = #{paramKey}, </if>
			<if test="paramValue != null">`param_value` = #{paramValue}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="remark != null">`remark` = #{remark}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from t_bonus_param where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_bonus_param where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>